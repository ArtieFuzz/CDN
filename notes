dns

dig my dns server, name of thing

get ip

return closest address

scamper...


dns requests will come across the board

each dnsserver will be running on a the same host as teh httpserver

so each ec2 host in host list will have dns server

so we can distribute things

big cidr country lookup


active measurements into cidr notation

somehow need to specify down

===================== DERP OK ITS ON PAPER

# SQL
  latency table
    authority ip server latency timestamp
  active server table
    server latency timestamp

main loop
  get dns request
  is_message
    translate message
    message = translate(domain)
    add to queue
  else
    lookup

# Workers

lookup worker
  """ takes an ip and returns best server
  if in ip has authority in table
    return server ip
  else
    get ip location
    find closest server
    set closest server to authority with high latency
    send trace request to active servers
    return closest server

dispatch
  loop
    if message queue not empty
      pop message
      dispatch to worker

ping worker
  send ping message to server
  wait for message or timeout
  update active server table

trace worker
  is trace request
    call scamper -i ip
    save latency
    send trace response
  is trace response
    save latency
    update routing table authority

# Messaging system

 63 character limit!
 header_char = {
 message types
  trace - ask servers to trace an ip address, get latencies
   request
     {tq}{ip}
   response
     {ts}{ip}:{latency}
  ping - ping a server, see if its connected and alive
   request
     {ping}{id}
   response
     {pong}{id}
  update - update master routing table
   request
     {uq}{ip}:{server}:{latency}
   response
     {us}{ip}:{server}:{latency}

  ex:
    dig @server_ip {tq192.168.1.1
    dig @server_ip {tr192.168.1.1:14.1231
    dig @server_ip {ping219381008
    dig @server_ip {pong219381008
    dig @server_ip {uq192.168.1.1:US-EAST:14.1231
    dig @server_ip {us192.168.1.1:US-EAST:14.1231

=====================

files

scamper
 trace(ip) -> latency
ping_worker
 ping(server)
trace_worker
dispatch_worker
dnsserver
iplocation
  get_closest(ip) -> server key
dao
  upsert latency
  upsert active
  delete active
messenger
  send(args)
  receive(domain)
  is_message(domain)
 classes:
  message
  ping_request
  ping_response
  update_requset
  trace_request
  trace_response




  !!! LEFT OFF SQL IMPLEMENTATION DATABASE STUFF
